{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../redux/slices/auth/user-actions';\nimport { handleFormValidation } from './functions';\n\nfunction FormHook() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"login\";\n  const [state, setState] = useState(values);\n  const [inputErrors, setInputErrors] = useState({});\n\n  function handleInputChange(event) {\n    setState({ ...state,\n      [event.currentTarget.id]: event.currentTarget.value\n    });\n    setInputErrors({ ...inputErrors,\n      [event.currentTarget.id]: handleFormValidation(event.currentTarget.type, event.currentTarget.value, event.currentTarget.required)\n    });\n  }\n\n  function submitForm(event) {\n    event.preventDefault();\n    console.log(event.currentTarget.checkValidity());\n\n    if (event.currentTarget.checkValidity()) {\n      submit();\n    }\n  }\n\n  function submit() {\n    _s();\n\n    console.log(state); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const dispatch = useDispatch();\n\n    switch (type) {\n      case \"login\":\n        dispatch(login(state));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  _s(submit, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n    return [useDispatch];\n  });\n\n  return {\n    state,\n    inputErrors,\n    handleInputChange,\n    submitForm\n  };\n}\n\n_s2(FormHook, \"s8k2ynawVgjNDVpepRbCv9EYROI=\");\n\n_c = FormHook;\nexport default FormHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormHook\");","map":{"version":3,"sources":["/Users/bonginkosilukhele/React/test/bet-test/src/utils/form-hook.tsx"],"names":["useState","useDispatch","login","handleFormValidation","FormHook","values","type","state","setState","inputErrors","setInputErrors","handleInputChange","event","currentTarget","id","value","required","submitForm","preventDefault","console","log","checkValidity","submit","dispatch"],"mappings":";;AAAA,SAAgBA,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,SAASC,oBAAT,QAAqC,aAArC;;AAGA,SAASC,QAAT,GAA2C;AAAA;;AAAA;;AAAA,MAAzBC,MAAyB,uEAAlB,EAAkB;AAAA,MAAdC,IAAc,uEAAT,OAAS;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACK,MAAD,CAAlC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AAEA,WAASW,iBAAT,CAA2BC,KAA3B,EAAuE;AACnEJ,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAW,OAACK,KAAK,CAACC,aAAN,CAAoBC,EAArB,GAA0BF,KAAK,CAACC,aAAN,CAAoBE;AAAzD,KAAD,CAAR;AACAL,IAAAA,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACG,KAAK,CAACC,aAAN,CAAoBC,EAArB,GAAyBX,oBAAoB,CAACS,KAAK,CAACC,aAAN,CAAoBP,IAArB,EAA2BM,KAAK,CAACC,aAAN,CAAoBE,KAA/C,EAAsDH,KAAK,CAACC,aAAN,CAAoBG,QAA1E;AAA9D,KAAD,CAAd;AACH;;AAED,WAASC,UAAT,CAAoBL,KAApB,EAAiE;AAC7DA,IAAAA,KAAK,CAACM,cAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACC,aAAN,CAAoBQ,aAApB,EAAZ;;AACA,QAAGT,KAAK,CAACC,aAAN,CAAoBQ,aAApB,EAAH,EAAuC;AACnCC,MAAAA,MAAM;AACT;AACJ;;AAED,WAASA,MAAT,GAAiB;AAAA;;AACbH,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EADa,CAEb;;AACA,UAAMgB,QAAQ,GAAGtB,WAAW,EAA5B;;AACA,YAAQK,IAAR;AACI,WAAK,OAAL;AACIiB,QAAAA,QAAQ,CAACrB,KAAK,CAACK,KAAD,CAAN,CAAR;AACA;;AAEJ;AACI;AANR;AAQH;;AA9BsC,KAkB9Be,MAlB8B;AAAA,YAqBlBrB,WArBkB;AAAA;;AAgCvC,SAAO;AACHM,IAAAA,KADG;AAEHE,IAAAA,WAFG;AAGHE,IAAAA,iBAHG;AAIHM,IAAAA;AAJG,GAAP;AAMH;;IAtCQb,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { login } from '../redux/slices/auth/user-actions';\nimport { handleFormValidation } from './functions';\nimport { IAuth } from './interfaces';\n\nfunction FormHook(values={}, type=\"login\") {\n    const [state, setState] = useState(values);\n    const [inputErrors, setInputErrors] = useState({});\n\n    function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setState({...state, [event.currentTarget.id]: event.currentTarget.value})\n        setInputErrors({...inputErrors, [event.currentTarget.id]:handleFormValidation(event.currentTarget.type, event.currentTarget.value, event.currentTarget.required)})\n    }\n\n    function submitForm(event:React.SyntheticEvent<HTMLFormElement>) {\n        event.preventDefault();\n\n        console.log(event.currentTarget.checkValidity());\n        if(event.currentTarget.checkValidity()){\n            submit()\n        }\n    }\n\n    function submit(){\n        console.log(state);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const dispatch = useDispatch()\n        switch (type) {\n            case \"login\":\n                dispatch(login(state as IAuth))\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    return {\n        state,\n        inputErrors,\n        handleInputChange,\n        submitForm,\n    }\n}\n\nexport default FormHook;\n"]},"metadata":{},"sourceType":"module"}