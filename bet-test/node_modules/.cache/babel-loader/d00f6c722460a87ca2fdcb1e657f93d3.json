{"ast":null,"code":"var _jsxFileName = \"/Users/bonginkosilukhele/React/bet-test/src/App.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducers from './redux/reducers';\nimport Auth from './screens/Auth/AuthPage';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(_ref) {\n  let {\n    loggedIn\n  } = _ref;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducers, {}, composeEnhancers(applyMiddleware(thunkMiddleware)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"kills\", /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: !loggedIn ? /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 54\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.auth.loggedIn\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bonginkosilukhele/React/bet-test/src/App.tsx"],"names":["React","connect","BrowserRouter","Router","Routes","Route","Navigate","createStore","applyMiddleware","compose","thunkMiddleware","reducers","Auth","App","loggedIn","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAkC,aAAlC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAS,aAAT;;;AAGA,SAASC,GAAT,OAAgC;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAE9B,QAAMC,gBAAgB,GAAIC,MAAD,CAAgBC,oCAAhB,IAAwDR,OAAjF;AAEA,QAAMS,KAAK,GAAGX,WAAW,CAACI,QAAD,EAAW,EAAX,EAAeI,gBAAgB,CAACP,eAAe,CAACE,eAAD,CAAhB,CAA/B,CAAzB;AACA,sBACE;AAAA,qCAEI,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,EAAE,CAACI,QAAD,gBAAY,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAAZ,gBAAuB,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAhBQD,G;;AAkBT,MAAMM,eAAe,GAAIC,KAAD,IAAgB;AACtC,SAAO;AACHN,IAAAA,QAAQ,EAAEM,KAAK,CAACC,IAAN,CAAWP;AADlB,GAAP;AAGD,CAJD;;AAKA,eAAeb,OAAO,CAACkB,eAAD,CAAP,CAAyBN,GAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducers from './redux/reducers';\nimport Auth from './screens/Auth/AuthPage';\nimport   './index.css';\n\n\nfunction App({ loggedIn }: any) {\n\n  const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(reducers, {}, composeEnhancers(applyMiddleware(thunkMiddleware)));\n  return (\n    <div>\nkills\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={!loggedIn ? <Auth /> : <Navigate to=\"/home\" />} />\n            </Routes>\n\n        </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n      loggedIn: state.auth.loggedIn\n  }\n}\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}