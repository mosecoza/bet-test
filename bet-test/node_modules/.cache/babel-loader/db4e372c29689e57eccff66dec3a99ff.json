{"ast":null,"code":"import CONSTANTS from './constants';\nimport { postAuthApi } from './functions';\n\nconst jwt = require('jsonwebtoken');\n\nexport const createUser = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  const token = jwt.sign({\n    email,\n    password\n  }, CONSTANTS.SALT, {\n    expiresIn: 60 * 60 * 24 * 7 // Expires in a week\n\n  });\n  console.log(token);\n  return token;\n};\nexport const signIn = _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  let response = postAuthApi('auth/login', JSON.stringify({\n    username: email,\n    password\n  }));\n  return response;\n};","map":{"version":3,"sources":["/Users/bonginkosilukhele/React/test/bet-test/src/utils/services.ts"],"names":["CONSTANTS","postAuthApi","jwt","require","createUser","email","password","token","sign","SALT","expiresIn","console","log","signIn","response","JSON","stringify","username"],"mappings":"AACA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAAqBC,WAArB,QAAwC,aAAxC;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAA2B;AAAA,MAA1B;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAA0B;AACjD,QAAMC,KAAK,GAAGL,GAAG,CAACM,IAAJ,CAAS;AACnBH,IAAAA,KADmB;AAEnBC,IAAAA;AAFmB,GAAT,EAGXN,SAAS,CAACS,IAHC,EAGK;AACfC,IAAAA,SAAS,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,CADX,CACa;;AADb,GAHL,CAAd;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SAAOA,KAAP;AACH,CATM;AAWP,OAAO,MAAOM,MAAM,GAAG,SAA2B;AAAA,MAA1B;AAACR,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAA0B;AAG9C,MAAIQ,QAA+B,GAAEb,WAAW,CAAC,YAAD,EAAcc,IAAI,CAACC,SAAL,CAAe;AAACC,IAAAA,QAAQ,EAACZ,KAAV;AAAiBC,IAAAA;AAAjB,GAAf,CAAd,CAAhD;AAIA,SAAOQ,QAAP;AACH,CARM","sourcesContent":["import { IAuth, ILoginResponse, IUser } from \"./interfaces\";\nimport CONSTANTS from './constants';\nimport { getNewsApi, postAuthApi } from './functions';\nimport { AxiosRequestConfig } from \"axios\";\nconst jwt = require('jsonwebtoken');\n\nexport const createUser = ({email, password}:IAuth)=>{\n    const token = jwt.sign({\n        email,\n        password\n    }, CONSTANTS.SALT, {\n        expiresIn: 60 * 60 * 24 * 7 // Expires in a week\n    })\n    console.log(token);\n    return token\n}\n\nexport const  signIn = ({email, password}:IAuth)=>{\n    \n    \n    let response: ILoginResponse | null= postAuthApi('auth/login',JSON.stringify({username:email, password}))\n\n\n\n    return response\n}"]},"metadata":{},"sourceType":"module"}