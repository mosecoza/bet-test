{"ast":null,"code":"import axios from \"axios\";\nimport CONSTANTS from \"./constants\";\nexport function getApi(endPoint, options) {\n  return new Promise(async (resolve, reject) => axios.get(`${CONSTANTS.URL}${endPoint}`).then(response => {\n    resolve(response.data);\n  }).catch(e => {\n    reject(null);\n  }));\n}\nexport function postApi(endPoint, options) {\n  return new Promise(async (resolve, reject) => axios.post(`${CONSTANTS.URL}?${endPoint}`).then(response => {\n    resolve(response.data);\n  }).catch(e => {\n    reject(null);\n  }));\n}\nexport function createMarkup(markUp) {\n  return {\n    __html: `${markUp}`\n  };\n}\nexport function handleFormValidation(id, value) {\n  let required = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!required && value.length === 0) return false;\n\n  switch (id) {\n    case \"password\":\n      if (value.length > 0) {\n        if (/^[A-Za-z]\\w{7,14}$/.test(value)) {\n          return false;\n        } else return `string is not a valid password`;\n      } else if (required) {\n        return `password must not be empty`;\n      } else return false;\n\n    case \"email\":\n      if (value.length > 0) {\n        if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value)) {\n          return false;\n        } else return `string is not a valid email`;\n      } else if (required) {\n        return `email must not be empty`;\n      } else return false;\n\n    default:\n      break;\n  }\n}","map":{"version":3,"sources":["/Users/bonginkosilukhele/React/test/bet-test/src/utils/functions.ts"],"names":["axios","CONSTANTS","getApi","endPoint","options","Promise","resolve","reject","get","URL","then","response","data","catch","e","postApi","post","createMarkup","markUp","__html","handleFormValidation","id","value","required","length","test"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,SAASC,MAAT,CAAgBC,QAAhB,EAAuCC,OAAvC,EAAkE;AACrE,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2BP,KAAK,CAACQ,GAAN,CAAW,GAAEP,SAAS,CAACQ,GAAI,GAAEN,QAAS,EAAtC,EAAyCO,IAAzC,CAA8CC,QAAQ,IAAI;AAEpGL,IAAAA,OAAO,CAACK,QAAQ,CAACC,IAAV,CAAP;AACH,GAH6C,EAG3CC,KAH2C,CAGrCC,CAAC,IAAI;AAEVP,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAN6C,CAAvC,CAAP;AAOH;AACD,OAAO,SAASQ,OAAT,CAAiBZ,QAAjB,EAAwCC,OAAxC,EAAmE;AACtE,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2BP,KAAK,CAACgB,IAAN,CAAY,GAAEf,SAAS,CAACQ,GAAI,IAAGN,QAAS,EAAxC,EAA2CO,IAA3C,CAAgDC,QAAQ,IAAI;AAEtGL,IAAAA,OAAO,CAACK,QAAQ,CAACC,IAAV,CAAP;AACH,GAH6C,EAG3CC,KAH2C,CAGrCC,CAAC,IAAI;AAEVP,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAN6C,CAAvC,CAAP;AAOH;AAED,OAAO,SAASU,YAAT,CAAsBC,MAAtB,EAAqC;AACxC,SAAO;AAAEC,IAAAA,MAAM,EAAG,GAAED,MAAO;AAApB,GAAP;AACH;AAED,OAAO,SAASE,oBAAT,CAA8BC,EAA9B,EAAyCC,KAAzC,EAAoE;AAAA,MAAhBC,QAAgB,uEAAP,KAAO;AAEvE,MAAG,CAACA,QAAD,IAAaD,KAAK,CAACE,MAAN,KAAe,CAA/B,EAAkC,OAAO,KAAP;;AAClC,UAAQH,EAAR;AACI,SAAK,UAAL;AACI,UAAIC,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AAClB,YAAI,qBAAqBC,IAArB,CAA0BH,KAA1B,CAAJ,EAAsC;AAClC,iBAAO,KAAP;AACH,SAFD,MAEO,OAAQ,gCAAR;AACV,OAJD,MAIO,IAAIC,QAAJ,EAAc;AACjB,eAAQ,4BAAR;AACH,OAFM,MAEA,OAAO,KAAP;;AAEX,SAAK,OAAL;AACI,UAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AAClB,YAAI,uEAAuEC,IAAvE,CAA4EH,KAA5E,CAAJ,EAAwF;AACpF,iBAAO,KAAP;AACH,SAFD,MAEO,OAAQ,6BAAR;AACV,OAJD,MAIO,IAAIC,QAAJ,EAAc;AACjB,eAAQ,yBAAR;AACH,OAFM,MAEA,OAAO,KAAP;;AAEX;AACI;AApBR;AAuBH","sourcesContent":["import axios from \"axios\";\nimport CONSTANTS from \"./constants\";\n\nexport function getApi(endPoint: RequestInfo, options: RequestInit): any {\n    return new Promise(async (resolve, reject) => axios.get(`${CONSTANTS.URL}${endPoint}`).then(response => {\n\n        resolve(response.data)\n    }).catch(e => {\n\n        reject(null)\n    }))\n}\nexport function postApi(endPoint: RequestInfo, options: RequestInit): any {\n    return new Promise(async (resolve, reject) => axios.post(`${CONSTANTS.URL}?${endPoint}`).then(response => {\n\n        resolve(response.data)\n    }).catch(e => {\n\n        reject(null)\n    }))\n}\n\nexport function createMarkup(markUp:string) {\n    return { __html: `${markUp}` };\n}\n\nexport function handleFormValidation(id:string, value:any, required=false) {\n    \n    if(!required && value.length===0) return false;\n    switch (id) {\n        case \"password\":\n            if (value.length > 0) {\n                if (/^[A-Za-z]\\w{7,14}$/.test(value)) {\n                    return false\n                } else return `string is not a valid password`\n            } else if (required) {\n                return `password must not be empty`\n            } else return false\n\n        case \"email\":\n            if (value.length > 0) {\n                if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value)) {\n                    return false\n                } else return `string is not a valid email`\n            } else if (required) {\n                return `email must not be empty`\n            } else return false\n    \n        default:\n            break;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}